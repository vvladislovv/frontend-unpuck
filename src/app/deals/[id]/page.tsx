'use client'

import { getDealById, updateDealStatus } from '@/lib/storage'
import { Deal, DealStatus } from '@/types'
import { ArrowLeftIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline'
import Image from 'next/image'
import Link from 'next/link'
import { useParams, useRouter } from 'next/navigation'
import { useEffect, useState } from 'react'

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏–º –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
export const dynamic = 'force-dynamic'

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–æ–∫ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å)
const mockDeals: Deal[] = [
  {
    id: '1',
    product: {
      id: '1',
      title: '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ú–ï–õ–¨–ù–ò–¶–´',
      description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –º–µ–ª—å–Ω–∏—Ü—ã –¥–ª—è –¥–æ–º–∞ –∏ –æ—Ñ–∏—Å–∞',
      price: 2500,
      originalPrice: 3000,
      category: 'kitchen',
      images: ['/api/placeholder/300/300'],
      rating: 4.5,
      reviewsCount: 23,
      seller: {
        id: '1',
        name: 'KitchenPro',
        avatar: '/api/placeholder/40/40',
        verified: true,
      },
      inStock: true,
      tags: ['–Ω–æ–≤–∏–Ω–∫–∞', '—Å–∫–∏–¥–∫–∞'],
      createdAt: '2024-01-15',
      updatedAt: '2024-01-15',
    },
    buyer: {
      id: '2',
      name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      email: 'ivan@example.com',
      role: 'buyer' as const,
      verified: true,
      createdAt: '2024-01-01',
      updatedAt: '2024-01-01',
    },
    seller: {
      id: '1',
      name: 'KitchenPro',
      email: 'kitchen@example.com',
      role: 'seller' as const,
      verified: true,
      createdAt: '2024-01-01',
      updatedAt: '2024-01-01',
    },
    status: 'shipped',
    quantity: 1,
    totalPrice: 2500,
    paymentMethod: 'card',
    trackingNumber: 'TRK123456789',
    createdAt: '2024-01-15T10:00:00Z',
    updatedAt: '2024-01-16T14:30:00Z',
    estimatedDelivery: '2024-01-20T18:00:00Z',
  },
  {
    id: '2',
    product: {
      id: '2',
      title: '–ú–ê–¢–û–í–ê–Ø –ü–û–ú–ê–î–ê –ö–ê–†–ê–ù–î–ê–® 3B1 N¬∞11',
      description: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∞—Ç–æ–≤–∞—è –ø–æ–º–∞–¥–∞-–∫–∞—Ä–∞–Ω–¥–∞—à –¥–ª—è –≥—É–±',
      price: 890,
      originalPrice: 1200,
      category: 'beauty',
      images: ['/api/placeholder/300/300'],
      rating: 4.8,
      reviewsCount: 156,
      seller: {
        id: '2',
        name: 'BeautyStore',
        avatar: '/api/placeholder/40/40',
        verified: true,
      },
      inStock: true,
      tags: ['–Ω–æ–≤–∏–Ω–∫–∞', '—Ö–∏—Ç'],
      createdAt: '2024-01-14',
      updatedAt: '2024-01-14',
    },
    buyer: {
      id: '2',
      name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      email: 'ivan@example.com',
      role: 'buyer' as const,
      verified: true,
      createdAt: '2024-01-01',
      updatedAt: '2024-01-01',
    },
    seller: {
      id: '2',
      name: 'BeautyStore',
      email: 'beauty@example.com',
      role: 'seller' as const,
      verified: true,
      createdAt: '2024-01-01',
      updatedAt: '2024-01-01',
    },
    status: 'delivered',
    quantity: 2,
    totalPrice: 1780,
    paymentMethod: 'wallet',
    createdAt: '2024-01-10T15:30:00Z',
    updatedAt: '2024-01-12T09:15:00Z',
  },
  {
    id: '3',
    product: {
      id: '3',
      title: '–ë–õ–ï–°–ö –î–õ–Ø –ì–£–ë',
      description: '–ë–ª–µ—Å—Ç—è—â–∏–π –±–ª–µ—Å–∫ –¥–ª—è –≥—É–± —Å –¥–æ–ª–≥–∏–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º',
      price: 450,
      category: 'beauty',
      images: ['/api/placeholder/300/300'],
      rating: 4.2,
      reviewsCount: 89,
      seller: {
        id: '3',
        name: 'CosmeticShop',
        avatar: '/api/placeholder/40/40',
        verified: false,
      },
      inStock: true,
      tags: ['–ø–æ–ø—É–ª—è—Ä–Ω–æ–µ'],
      createdAt: '2024-01-13',
      updatedAt: '2024-01-13',
    },
    buyer: {
      id: '2',
      name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      email: 'ivan@example.com',
      role: 'buyer' as const,
      verified: true,
      createdAt: '2024-01-01',
      updatedAt: '2024-01-01',
    },
    seller: {
      id: '3',
      name: 'CosmeticShop',
      email: 'cosmetic@example.com',
      role: 'seller' as const,
      verified: false,
      createdAt: '2024-01-01',
      updatedAt: '2024-01-01',
    },
    status: 'pending',
    quantity: 1,
    totalPrice: 450,
    paymentMethod: 'crypto',
    createdAt: '2024-01-18T12:00:00Z',
    updatedAt: '2024-01-18T12:00:00Z',
  },
]

const statusConfig: Record<DealStatus, {
  label: string
  icon: string
  color: string
  bgColor: string
  borderColor: string
}> = {
  pending: {
    label: '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
    icon: '‚è∞',
    color: 'text-yellow-600 bg-yellow-50',
    bgColor: 'bg-yellow-50',
    borderColor: 'border-yellow-200',
  },
  confirmed: {
    label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ',
    icon: '‚úÖ',
    color: 'text-blue-600 bg-blue-50',
    bgColor: 'bg-blue-50',
    borderColor: 'border-blue-200',
  },
  shipped: {
    label: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
    icon: 'üöö',
    color: 'text-purple-600 bg-purple-50',
    bgColor: 'bg-purple-50',
    borderColor: 'border-purple-200',
  },
  delivered: {
    label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ',
    icon: '‚úÖ',
    color: 'text-green-600 bg-green-50',
    bgColor: 'bg-green-50',
    borderColor: 'border-green-200',
  },
  cancelled: {
    label: '–û—Ç–º–µ–Ω–µ–Ω–æ',
    icon: '‚ùå',
    color: 'text-red-600 bg-red-50',
    bgColor: 'bg-red-50',
    borderColor: 'border-red-200',
  },
}


export default function DealDetailsPage() {
  const params = useParams()
  const router = useRouter()
  const [deal, setDeal] = useState<Deal | null>(null)
  const [loading, setLoading] = useState(true)
  const [isCancelling, setIsCancelling] = useState(false)
  const [showCancelModal, setShowCancelModal] = useState(false)
  const [cancelReason, setCancelReason] = useState('')

  useEffect(() => {
    const dealId = params.id as string
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage
    const storedDeal = getDealById(dealId)
    if (storedDeal) {
      setDeal(storedDeal)
      setLoading(false)
      return
    }
    
    // –ï—Å–ª–∏ –≤ localStorage –Ω–µ—Ç, –±–µ—Ä–µ–º –∏–∑ mockDeals
    const foundDeal = mockDeals.find(d => d.id === dealId)
    setDeal(foundDeal || null)
    setLoading(false)
  }, [params.id])

  if (loading) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    )
  }

  if (!deal) {
    return (
      <div className="min-h-screen bg-white flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">–°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
          <Link 
            href="/deals"
            className="inline-flex items-center space-x-2 text-blue-600 hover:text-blue-700"
          >
            <ArrowLeftIcon className="h-5 w-5" />
            <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–¥–µ–ª–∫–∞–º</span>
          </Link>
        </div>
      </div>
    )
  }

  const config = statusConfig[deal.status]

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    })
  }

  const getPaymentMethodLabel = (method: string) => {
    switch (method) {
      case 'card': return '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞'
      case 'wallet': return '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫'
      case 'crypto': return '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞'
      default: return method
    }
  }

  const handleCancelOrder = () => {
    setShowCancelModal(true)
  }

  const handleConfirmCancel = async () => {
    if (!deal) return

    setIsCancelling(true)
    
    try {
      const response = await fetch('/api/deals/cancel', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          dealId: deal.id,
          reason: cancelReason || '–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º'
        })
      })

      const result = await response.json()

      if (result.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ –≤ localStorage
        updateDealStatus(deal.id, 'cancelled', cancelReason || '–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º')
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        setDeal(prev => prev ? { 
          ...prev, 
          status: 'cancelled',
          updatedAt: new Date().toISOString()
        } : null)
        setShowCancelModal(false)
        setCancelReason('')
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
        window.dispatchEvent(new CustomEvent('dealUpdated', { 
          detail: { dealId: deal.id, status: 'cancelled' } 
        }))
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–º–µ–Ω–µ
        alert('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω')
      } else {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞:', error)
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    } finally {
      setIsCancelling(false)
    }
  }

  const handleCancelModalClose = () => {
    setShowCancelModal(false)
    setCancelReason('')
  }

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <div className="sticky top-0 z-10 bg-white border-b border-gray-200 px-6 py-4 pt-6">
        <div className="flex items-center space-x-4">
          <Link 
            href="/deals"
            className="p-2 -ml-2 rounded-lg hover:bg-gray-100 transition-colors"
          >
            <ArrowLeftIcon className="h-6 w-6 text-gray-600" />
          </Link>
          <h1 className="text-xl font-bold text-gray-900">–î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏</h1>
        </div>
      </div>

      {/* Content */}
      <div className="px-6 py-6 pt-6">
        {/* –°—Ç–∞—Ç—É—Å */}
        <div className="mb-8">
          <div className={`inline-flex items-center space-x-3 rounded-lg px-4 py-3 border ${config.bgColor} ${config.borderColor}`}>
            <span className="text-2xl">{config.icon}</span>
            <span className={`text-lg font-medium ${config.color}`}>
              {config.label}
            </span>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">–¢–æ–≤–∞—Ä</h2>
          <div className="bg-gray-50 rounded-lg p-6">
            <div className="flex space-x-6">
              <div className="relative h-32 w-32 flex-shrink-0">
                <Image
                  src={deal.product.images[0] || '/api/placeholder/300/300'}
                  alt={deal.product.title}
                  fill
                  className="rounded-lg object-cover"
                  priority
                  onError={(e) => {
                    const target = e.target as HTMLImageElement
                    target.src = '/api/placeholder/300/300'
                  }}
                />
              </div>
              <div className="flex-1">
                <h3 className="text-lg font-semibold text-gray-900 mb-2">
                  {deal.product.title}
                </h3>
                <p className="text-gray-600 mb-4">
                  {deal.product.description}
                </p>
                <div className="flex items-center space-x-6">
                  <span className="text-2xl font-bold text-gray-900">
                    {deal.totalPrice.toLocaleString()} ‚ÇΩ
                  </span>
                  <span className="text-gray-500">
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {deal.quantity}
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–≤—Ü–µ */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">–ü—Ä–æ–¥–∞–≤–µ—Ü</h2>
          <div className="bg-gray-50 rounded-lg p-6">
            <div className="flex items-center space-x-4">
              <div className="relative h-16 w-16">
                <Image
                  src={deal.seller.avatar || '/api/placeholder/40/40'}
                  alt={deal.seller.name}
                  fill
                  className="rounded-full object-cover"
                  onError={(e) => {
                    const target = e.target as HTMLImageElement
                    target.src = '/api/placeholder/40/40'
                  }}
                />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900">{deal.seller.name}</h3>
                <p className="text-gray-600">
                  {deal.seller.verified ? '‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü' : '‚ö†Ô∏è –ù–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü'}
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ */}
        <div className="mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h2>
          <div className="bg-gray-50 rounded-lg p-6">
            <div className="space-y-4">
              <div className="flex justify-between items-center py-2">
                <span className="text-gray-600">–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:</span>
                <span className="font-medium text-gray-900">
                  {formatDate(deal.createdAt)}
                </span>
              </div>
              
              <div className="flex justify-between items-center py-2">
                <span className="text-gray-600">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</span>
                <span className="font-medium text-gray-900">
                  {getPaymentMethodLabel(deal.paymentMethod)}
                </span>
              </div>
              
              {deal.trackingNumber && (
                <div className="flex justify-between items-center py-2">
                  <span className="text-gray-600">–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä:</span>
                  <span className="font-mono font-medium text-gray-900">
                    {deal.trackingNumber}
                  </span>
                </div>
              )}
              
              {deal.estimatedDelivery && (
                <div className="flex justify-between items-center py-2">
                  <span className="text-gray-600">–û–∂–∏–¥–∞–µ–º–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞:</span>
                  <span className="font-medium text-gray-900">
                    {formatDate(deal.estimatedDelivery)}
                  </span>
                </div>
              )}
              
              <div className="flex justify-between items-center py-2 border-t border-gray-200 pt-4">
                <span className="text-lg font-semibold text-gray-900">–û–±—â–∞—è —Å—É–º–º–∞:</span>
                <span className="text-2xl font-bold text-gray-900">
                  {deal.totalPrice.toLocaleString()} ‚ÇΩ
                </span>
              </div>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        
        {(deal.status === 'pending' || deal.status === 'confirmed') && (
          <div className="mb-6">
            <button 
              onClick={handleCancelOrder}
              disabled={isCancelling}
              className={`w-full rounded-lg border border-red-300 px-6 py-4 text-lg font-medium transition-colors ${
                isCancelling
                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'
                  : 'text-red-700 hover:bg-red-50'
              }`}
            >
              {isCancelling ? '–û—Ç–º–µ–Ω–∞...' : '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'}
            </button>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        <div className="mt-8">
          <Link 
            href="/deals"
            className="w-full inline-flex items-center justify-center space-x-2 rounded-lg bg-gray-100 px-6 py-4 text-lg font-medium text-gray-700 hover:bg-gray-200 transition-colors"
          >
            <ArrowLeftIcon className="h-5 w-5" />
            <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–¥–µ–ª–∫–∞–º</span>
          </Link>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã */}
      {showCancelModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg max-w-md w-full p-6">
            <div className="flex items-center space-x-3 mb-4">
              <ExclamationTriangleIcon className="h-6 w-6 text-red-500" />
              <h3 className="text-lg font-semibold text-gray-900">–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?</h3>
            </div>
            
            <p className="text-gray-600 mb-4">
              –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
            </p>
            
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):
              </label>
              <textarea
                value={cancelReason}
                onChange={(e) => setCancelReason(e.target.value)}
                placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã..."
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 resize-none"
                rows={3}
              />
            </div>
            
            <div className="flex space-x-3">
              <button
                onClick={handleCancelModalClose}
                disabled={isCancelling}
                className="flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors disabled:opacity-50"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={handleConfirmCancel}
                disabled={isCancelling}
                className={`flex-1 px-4 py-2 rounded-lg font-medium transition-colors ${
                  isCancelling
                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                    : 'bg-red-600 text-white hover:bg-red-700'
                }`}
              >
                {isCancelling ? '–û—Ç–º–µ–Ω–∞...' : '–î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å'}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}
